using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using KrnlAPI;
using System.Windows.Forms;
using System.IO;

namespace SV_Reworked__SUI_
{
    public partial class MainWindow : Form
    {
        public MainWindow()
        {
            InitializeComponent();
            MainAPI.Load(); //Loads Krnl
        }

        private void button6_Click(object sender, EventArgs e)
        {
            MainAPI.Execute(ScriptBox.Text); //Executes script after Krnl has Injected
        }

        private void button1_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            WindowState = FormWindowState.Minimized;
        }

        private void Inject_Click(object sender, EventArgs e)
        {
            MainAPI.Inject();
        }

        private void Clear_Click(object sender, EventArgs e)
        {
            MainWindow UI = new MainWindow();
            UI.ScriptBox.Clear();
        }

        private void Options_Click(object sender, EventArgs e)
        {

        }

        private void siticoneCheckBox1_CheckedChanged(object sender, EventArgs e)
        {
            MainWindow UI = new MainWindow();

            if (siticoneCheckBox1.Checked)
                this.TopMost = true;
            else
                this.TopMost = false;

        }

        private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (listBox1.SelectedItem == null)
            {


                MessageBox.Show("File Doesnt Exist!");

            }
            else
            {

                ScriptBox.Text = File.ReadAllText($"./Scripts/{listBox1.SelectedItem}");

            }
        }

        private void Save_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Txt Files (*.txt)|*.txt|Lua Files (*.lua)|*.lua|All Files (*.*)|*.*";
            if (sfd.ShowDialog() == DialogResult.OK)

            {
                Stream s = sfd.OpenFile();
                StreamWriter sw = new StreamWriter(s);
                sw.Write(ScriptBox.Text);
                sw.Close();
            }
        }

        private void Open_Click(object sender, EventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();
            ofd.Filter = "Txt Files (*.txt)|*.txt|Lua Files (*.lua)|*.lua|All Files (*.*)|*.*";
            if (ofd.ShowDialog() == DialogResult.OK)
            {
                Stream s = ofd.OpenFile();
                StreamReader sr = new StreamReader(s);
                ScriptBox.Text = sr.ReadToEnd();
                sr.Close();
            }
        }

        private void siticoneCheckBox2_CheckedChanged(object sender, EventArgs e)
        {
            if (siticoneCheckBox1.Checked)
                MainAPI.AutoAttach(true); //Enables AutoAttach
            else
                MainAPI.AutoAttach(false); //Dissable AutoAttach
        }
        public static void PopulateListBox(ListBox lsb, string Folder, string FileType)
        {
            DirectoryInfo dinfo = new DirectoryInfo(Folder);
            FileInfo[] Files = dinfo.GetFiles(FileType);
            foreach (FileInfo file in Files)
            {
                lsb.Items.Add(file.Name);
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();//Clear Items in the LuaScriptList
            PopulateListBox(listBox1, "./Scripts", "*.txt");
            PopulateListBox(listBox1, "./Scripts", "*.lua");
        }
    }
}
